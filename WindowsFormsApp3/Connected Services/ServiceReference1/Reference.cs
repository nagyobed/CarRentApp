//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp3.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadSql", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void LoadSql();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoadSql", ReplyAction="*")]
        System.Threading.Tasks.Task LoadSqlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/dsCreate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet dsCreate(string cmd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/dsCreate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> dsCreateAsync(string cmd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/executeCmd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void executeCmd(string cmdString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/executeCmd", ReplyAction="*")]
        System.Threading.Tasks.Task executeCmdAsync(string cmdString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listSort", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string listSort(bool ckBox2, bool ckBox8, bool ckBox9, bool ckBox10, bool ckBox3, bool ckBox4, bool ckBox5, bool ckBox6, bool ckBox7, string txt2, string cBox1, int value1, int value2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listSort", ReplyAction="*")]
        System.Threading.Tasks.Task<string> listSortAsync(bool ckBox2, bool ckBox8, bool ckBox9, bool ckBox10, bool ckBox3, bool ckBox4, bool ckBox5, bool ckBox6, bool ckBox7, string txt2, string cBox1, int value1, int value2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : WindowsFormsApp3.ServiceReference1.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<WindowsFormsApp3.ServiceReference1.WebService1Soap>, WindowsFormsApp3.ServiceReference1.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public void LoadSql() {
            base.Channel.LoadSql();
        }
        
        public System.Threading.Tasks.Task LoadSqlAsync() {
            return base.Channel.LoadSqlAsync();
        }
        
        public System.Data.DataSet dsCreate(string cmd) {
            return base.Channel.dsCreate(cmd);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> dsCreateAsync(string cmd) {
            return base.Channel.dsCreateAsync(cmd);
        }
        
        public void executeCmd(string cmdString) {
            base.Channel.executeCmd(cmdString);
        }
        
        public System.Threading.Tasks.Task executeCmdAsync(string cmdString) {
            return base.Channel.executeCmdAsync(cmdString);
        }
        
        public string listSort(bool ckBox2, bool ckBox8, bool ckBox9, bool ckBox10, bool ckBox3, bool ckBox4, bool ckBox5, bool ckBox6, bool ckBox7, string txt2, string cBox1, int value1, int value2) {
            return base.Channel.listSort(ckBox2, ckBox8, ckBox9, ckBox10, ckBox3, ckBox4, ckBox5, ckBox6, ckBox7, txt2, cBox1, value1, value2);
        }
        
        public System.Threading.Tasks.Task<string> listSortAsync(bool ckBox2, bool ckBox8, bool ckBox9, bool ckBox10, bool ckBox3, bool ckBox4, bool ckBox5, bool ckBox6, bool ckBox7, string txt2, string cBox1, int value1, int value2) {
            return base.Channel.listSortAsync(ckBox2, ckBox8, ckBox9, ckBox10, ckBox3, ckBox4, ckBox5, ckBox6, ckBox7, txt2, cBox1, value1, value2);
        }
    }
}
